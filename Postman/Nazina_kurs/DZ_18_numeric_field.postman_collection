{
	"info": {
		"_postman_id": "920e138f-a965-4c25-b0c9-a1eed49167c6",
		"name": "DZ_18",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DZ_18_count_sugg Copy",
			"item": [
				{
					"name": "DZ_18__1_by_default",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Значение по умолчанию, count в реквесте не указываем. ОР: подсказок в ответе 10\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"pm.test(\"Значение по умолчанию, count в реквесте не указываем. Может подсказок в ответе 20?\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(20);",
									"});",
									"",
									"console.log(jsonData.suggestions)",
									"",
									"//UPD для ДЗ 25",
									"",
									"//pm.collectionVariables.set(\"token_18\", )",
									"console.log(pm.request.headers)",
									"console.log(Object.keys(pm.request.headers.members))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{Token_18}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"query\": \"Бонд\"\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__1.3_меньше_подсказок",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// В запросе указала \"Прма\" ",
									"",
									"pm.test(\"Указываем для поиска нечто экзотическое. ОР: подсказок в ответе 10 или меньше\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf.at.most(10);",
									"});",
									"",
									"pm.test(\"CRASH. подсказок в ответе может больше 10?\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf.at.most(3);",
									"});",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"query\": \"Прма\"\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__1.2_ноль",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Значение count указываем и даём ему значение ноль",
									"",
									"pm.test(\"Значение count = 0 . ОР: подсказок в ответе 10\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"pm.test(\"Значение count = 0. Может и подсказок нет?\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(0);",
									"});",
									"",
									"console.log(jsonData.suggestions)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"query\": \"Бонд\",\r\n\"count\":  0\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__2_приграничное_низ_1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Приграничное значени count 1\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(1);",
									"});",
									"",
									"pm.test(\"CRASH  Приграничное значени count 1\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(2);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 1\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__3_граничное_верхнее_20",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Граничное верхнее значение count 20\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(20);",
									"});",
									"",
									"pm.test(\"CRASH Граничное верхнее значение count 20\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(12);",
									"});",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 20\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18_3.1_граничное_верхнее_20_подсказок_меньше",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// В запросе указала \"Люта\"",
									"",
									"pm.test(\"Граничное верхнее значение count 20, но ответов меньше\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf.at.most(20);",
									"});",
									"",
									"pm.test(\"CRASH Граничное верхнее значение count 20, а вдруг ответов больше\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf.at.most(17);",
									"});",
									"console.log(jsonData.suggestions)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Люта\",\r\n  \"count\": 20\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__4_приграничное_верхнее_19",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Граничное верхнее значение count 19\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(19);",
									"});",
									"",
									"pm.test(\"CRASH Граничное верхнее значение count 19\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 19\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__5_приграничное_верхнее_21",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"//Приграничное верхнее значение count 21",
									"",
									"pm.test(\"Система выдаст в ответе 20 подсказок \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(20);",
									"});",
									"",
									"pm.test(\"Система отрезает результаты больше чем 20. Проверяем так ли. Приграничное верхнее значение count 21\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(21);",
									"});",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 21\r\n}"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__6_отрицательное_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Отрицательное значение, count = -3, ОР: система не принимает отрицательные числа и выдаёт результаты по умолчанию для count = 0, подсказок в результате 10 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"pm.test(\"Отрицательное значение, count = -3 . Проверяем, а вдруг система убирает знак минуса и количество подсказок 3 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(3);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": -3\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__7_дробные числа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Дробные числа, count = 3.9",
									"",
									"pm.test(\"Система обрабатывает только целую часть числа, отсекая дробную, при count = 3.9 подсказок в результатах 3 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(3);",
									"});",
									"",
									"pm.test(\"Может система округляет? \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(4);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 3.9\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18_7_1_дробные числа",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Дробные числа, count = 0.99999999999999999  семнадцать девяток",
									"// тесты ставлю наоборот, т.к. считаю, что это баг, и то что я проверяю и ожидаю ломается )))",
									"",
									"pm.test(\"Я ожидаю, что система обрабатывает только целую часть числа, отсекая дробную, и жду в ответе 10 подсказок, как по умолчанию. Но тест КРАШится \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"pm.test(\" Система таки округлила и я в ответе получила 1  \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(1);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 0.99999999999999999\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__8_техническая граница",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Техническая граница, count = 999999999",
									"pm.test(\"Система принимает число из девяти знаков, но в результатах выдаёт 20 подсказок согласно ТЗ \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(20);",
									"});",
									"",
									"pm.test(\"Сравниваем со значением count = 999999999, которое передаём в боди\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(999999999);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 999999999\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__9_техническая_превышение",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Превышение технической границы, 10 знаков, count = 9999999990",
									"",
									"pm.test(\"ОР: статус код 400 и  ..... \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Может и не меняется статус код ? \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// Если нужно проверить текст сообщения об ошибке.",
									"pm.test(\"... сообщение об ошибке\", function () {",
									"  pm.expect(jsonData.message).to.eql(\"Numeric value (9999999990) out of range of int\\n at [Source: (org.apache.cxf.transport.http.AbstractHTTPDestination$1); line: 3, column: 12] (through reference chain: ru.hflabs.sgt.model.fio.SuggestFioRequest[\\\"count\\\"])\");",
									"});",
									"console.log(jsonData)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\": 9999999990\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__10_буквы_знаки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Буквы кирилицы и латинского алфавита, различные знаки, в т.ч. попытка вставить XSS инъекцию, выдают статус код 400 с разными сообщениями об ошибке \"message\" ",
									"",
									"pm.test(\"ОР: статус код 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Может и не меняется статус код ? \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\":  #\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__11_null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// При вводе в боди count = null подсказок в ответе 10. ",
									"pm.test(\"Система распознаёт значение count = null как по умолчанию и подсказок в ответе 10 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"pm.test(\"А может всё таки ноль? \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(0);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\":  null\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__12_ пробел",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Значение count = \"   \"  любое количество пробелов ",
									"",
									"pm.test(\"Система распознаёт значение как по умолчанию и подсказок в ответе 10 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"pm.test(\"А может всё как максимум? \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(20);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\":  \"     \" \r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__13_ COUNT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// проверка на регистронезависимость COUNT = 2. ОР: количество ответов 2, ",
									"",
									"pm.test(\"ОР: названия параметров регистронезависимы, количество ответов 2\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(2);",
									"});",
									"",
									"pm.test(\"КРАШ теста, ФР: система не распознаёт названия напечатанные большими буквами, по умолчанию подсказок в ответе 10 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"COUNT\":  2 \r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__14_несколько_раз",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// Ввод параметра \"count\":  8 , \"count\":  1,  \"count\":  4   несколько раз.  ОР: система воспринимает последний введённый параметр, количество ответов 4 ",
									"",
									"pm.test(\"Ввод одного параметра несколько раз\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(4);",
									"});",
									"",
									"pm.test(\"КРАШ Ввод одного параметра несколько раз \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(8);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\":  8 ,\r\n  \"count\":  1, \r\n  \"count\":  4\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_18__15test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"// проверка на регистронезависимость COUNT = 2. ОР: количество ответов 2, ",
									"",
									"pm.test(\"ОР: названия параметров регистронезависимы, количество ответов 2\", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(2);",
									"});",
									"",
									"pm.test(\"КРАШ теста, ФР: система не распознаёт названия напечатанные большими буквами, по умолчанию подсказок в ответе 10 \", function () {",
									"       pm.expect(jsonData.suggestions).to.have.lengthOf(10);",
									"});",
									"",
									"console.log(jsonData.suggestions)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Token 793d2830a6360a1569c8e7b9dd1afeb2f57ffa77"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": \"Бонд\",\r\n  \"count\":  2, 3, 4\r\n  }"
						},
						"url": {
							"raw": "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio",
							"protocol": "https",
							"host": [
								"suggestions",
								"dadata",
								"ru"
							],
							"path": [
								"suggestions",
								"api",
								"4_1",
								"rs",
								"suggest",
								"fio"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DZ_21_455_459_MagicSearch",
			"item": [
				{
					"name": "DZ_21_M_S_code456",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MagicSeasch_code_456\", function () {\r",
									"    pm.response.to.have.status(456);\r",
									"});\r",
									"pm.test(\"MagicSeasch_code_456\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"//UPD 2 проверки  to.be.true\r",
									"pm.test(\"Проверка статус код 456 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 456 ).to.be.true;\r",
									"});\r",
									"pm.test(\"CRASH Проверка статус код 456 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 455 ).to.be.true;\r",
									"});\r",
									"pm.test(\"Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Длина запроса не должна превышать 1000 символов\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"запроса не должна превышать 1000 символов\");\r",
									"});\r",
									"pm.test(\"Проверка в боди статус код 456\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"456\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка в боди статус код 456\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"255\");\r",
									"});\r",
									"\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "query",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/rest/magicsearch",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"rest",
								"magicsearch"
							],
							"query": [
								{
									"key": "query",
									"value": "",
									"disabled": true
								},
								{
									"key": "partyType",
									"value": "USER",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_21_M_S_code457",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MagicSeasch_code_457\", function () {\r",
									"    pm.response.to.have.status(457);\r",
									"});\r",
									"pm.test(\"MagicSeasch_code_457\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"//UPD 2 проверки  to.be.true\r",
									"pm.test(\"Проверка статус код 457 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 457 ).to.be.true;\r",
									"});\r",
									"pm.test(\"CRASH Проверка статус код 457 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 455 ).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Параметр partyType может принимать только значения: ALL,USER, COMPANY\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"partyType может принимать только значения: ALL,USER, COMPANY\");\r",
									"});\r",
									"pm.test(\"Проверка в боди статус код 457\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"457\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка в боди статус код 457\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"255\");\r",
									"});\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "query",
									"value": "string",
									"type": "text"
								},
								{
									"key": "partyType",
									"value": "company",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/rest/magicsearch",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"rest",
								"magicsearch"
							],
							"query": [
								{
									"key": "query",
									"value": "string",
									"disabled": true
								},
								{
									"key": "partyType",
									"value": "company",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_21_M_S_code455",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MagicSeasch_code_455\", function () {\r",
									"    pm.response.to.have.status(455);\r",
									"});\r",
									"pm.test(\"CRASH MagicSeasch_code_455\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"//UPD 2 проверки  to.be.true\r",
									"pm.test(\"Проверка статус код 455 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 455 ).to.be.true;\r",
									"});\r",
									"pm.test(\"CRASH Проверка статус код 455 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 456 ).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Не найден обязательный параметр query\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"найден обязательный параметр query\");\r",
									"});\r",
									"pm.test(\"Проверка в боди статус код 455\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"455\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка в боди статус код 455\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"255\");\r",
									"});\r",
									"\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "partyType",
									"value": "ALL",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/rest/magicsearch",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"rest",
								"magicsearch"
							],
							"query": [
								{
									"key": "query",
									"value": "Пупкин",
									"disabled": true
								},
								{
									"key": "partyType",
									"value": "ALL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_21_M_S_code458",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MagicSeasch_code_458\", function () {\r",
									"    pm.response.to.have.status(458);\r",
									"});\r",
									"pm.test(\"MagicSeasch_code_458\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"//UPD 2 проверки  to.be.true\r",
									"pm.test(\"Проверка статус код 458 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 458 ).to.be.true;\r",
									"});\r",
									"pm.test(\"CRASH Проверка статус код 458 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 455 ).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Параметр taskStatus может принимать только значения: ALL, ACTUAL, COMPLETE, FAIL\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Параметр taskStatus принимать только значения: ALL, ACTUAL, COMPLETE, FAIL\");\r",
									"});\r",
									"pm.test(\"Проверка в боди статус код 458\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"458\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка в боди статус код 458\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"400\");\r",
									"});\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "query",
									"value": "Пупкин",
									"type": "text"
								},
								{
									"key": "partyType",
									"value": "ALL",
									"type": "text"
								},
								{
									"key": "taskStatus",
									"value": "all",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/rest/magicsearch",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"rest",
								"magicsearch"
							],
							"query": [
								{
									"key": "query",
									"value": "Пупкин",
									"disabled": true
								},
								{
									"key": "partyType",
									"value": "ALL",
									"disabled": true
								},
								{
									"key": "taskStatus",
									"value": "all",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DZ_21_M_S_code459",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"MagicSeasch_code_459\", function () {\r",
									"    pm.response.to.have.status(459);\r",
									"});\r",
									"pm.test(\"MagicSeasch_code_459\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"\r",
									"//UPD 2 проверки  to.be.true\r",
									"pm.test(\"Проверка статус код 459 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 459 ).to.be.true;\r",
									"});\r",
									"pm.test(\"CRASH Проверка статус код 459 с помощью to.be.true\", function () {\r",
									"    pm.expect(jsonData.code_error == 455 ).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Параметр include может принимать только значения: ALL, USER, COMPANY, TASK, WHY\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка текста сообщения\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Параметр include может только значения: ALL, USER, COMPANY, TASK, WHY\");\r",
									"});\r",
									"pm.test(\"Проверка в боди статус код 459\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"459\");\r",
									"});\r",
									"pm.test(\"CRASH Проверка в боди статус код 458\", function () {\r",
									"    pm.expect(jsonData.code_error).to.eql(\"400\");\r",
									"});\r",
									"console.log(jsonData)"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "query",
									"value": "Пупкин",
									"type": "text"
								},
								{
									"key": "partyType",
									"value": "ALL",
									"type": "text"
								},
								{
									"key": "include",
									"value": "all",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://users.bugred.ru/tasks/rest/magicsearch",
							"protocol": "http",
							"host": [
								"users",
								"bugred",
								"ru"
							],
							"path": [
								"tasks",
								"rest",
								"magicsearch"
							],
							"query": [
								{
									"key": "query",
									"value": "Пупкин",
									"disabled": true
								},
								{
									"key": "partyType",
									"value": "ALL",
									"disabled": true
								},
								{
									"key": "taskStatus",
									"value": "all",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}